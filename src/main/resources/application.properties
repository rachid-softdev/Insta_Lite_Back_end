# ===============================
# SERVER
# ===============================
server.address=${SPRING_HOST}
server.port=${SPRING_PORT}
server.servlet.context-path=/

# ==============================
# STOCKAGE DES RESSOURCES
# ==============================
image.upload.path=src/main/resources/static/images
video.upload.path=src/main/resources/static/videos

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ===============================
# DEBUG
# ===============================
logging.level.org.springframework.web=ERROR
logging.level.org.springframework.security=ERROR
logging.level.web=ERROR
logging.level.org.springframework=ERROR
logging.level.org.hibernate=ERROR
server.error.include-stacktrace=ALWAYS
server.error.include-exception=true
# Disabling the Whitelabel Error Page
server.error.whitelabel.enabled=false
server.error.path=/error
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration

# ===============================
# DOCUMENTATION
# ===============================
#springdoc.api-docs.enabled=false
#springdoc.swagger-ui.enabled=false
springdoc.swagger-ui.path=/instalite-documentation
springdoc.api-docs.path=/instalite-api-docs
springdoc.packages-to-scan=fr.instalite
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.filter=true

# ===============================
# DATABASE
# ===============================
# Use the .env without an extension as a .properties file
spring.config.import=optional:file:.env[.properties]
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Fix Postgres JPA Error:
# Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.defer-datasource-initialization=true

# spring.datasource.hikari.connection-timeout=30000
# spring.datasource.hikari.maximum-pool-size=10
# spring.datasource.hikari.minimum-idle=5
# spring.datasource.hikari.idle-timeout=600000
# spring.datasource.hikari.max-lifetime=1800000
# spring.datasource.hikari.pool-name=collection-pool

# ===============================
# JWT
# ===============================
application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
application.security.jwt.expiration=86400000
application.security.jwt.refresh-token.expiration=604800000

# Spring Boot DevTools
spring.devtools.restart.enabled=true
spring.devtools.restart.additional-exclude=static/**,public/**,resources/**,META-INF/**,templates/**,**/*Test.class,**/*Tests.class,git.properties
spring.devtools.livereload.enabled=true
spring.devtools.restart.poll-interval=2s
spring.devtools.restart.quiet-period=1s
